{"ast":null,"code":"//? VALIDATION MODIFICA EL ESTADO, NO TIENE QUE RETORNAR NADA\n\nconst validation = (userData, errors, setErrors) => {\n  //!validacion username\n\n  if (!userData.username) {\n    setErrors({\n      ...errors,\n      username: \"Por favor completa este campo\"\n    });\n  } else if (userData.username.length > 35) {\n    setErrors({\n      ...errors,\n      username: \"No puede superar los 35 caracteres\"\n    });\n  }\n\n  // Acá usamos un REGEX para validar si es un mail\n  else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.username)) {\n    setErrors({\n      ...errors,\n      username: \"Email inválido\"\n    });\n  }\n\n  // Esto es por si no hay ningún error, también tiene que mostrar algo (o no mostrar nada, en este caso)\n  else {\n    setErrors({\n      ...errors,\n      username: \"\"\n    });\n  }\n\n  //! validacion password\n\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    setErrors({\n      ...errors,\n      password: \"Longitud inválida\"\n    });\n  } else if (!/\\d/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: \"Debe contener al menos un número\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      password: \"\"\n    });\n  }\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","setErrors","username","length","test","password"],"sources":["C:/Users/User/Desktop/Nati/Henry/INTEGRADOR/rickandmorty/front/src/components/Form/validation.js"],"sourcesContent":["//? VALIDATION MODIFICA EL ESTADO, NO TIENE QUE RETORNAR NADA\r\n\r\nconst validation = (userData, errors, setErrors ) => {\r\n    //!validacion username\r\n\r\n    if (!userData.username) {\r\n        setErrors({...errors, username:\"Por favor completa este campo\"});\r\n    }\r\n\r\n    else if(userData.username.length > 35) {\r\n        setErrors({...errors, username:\"No puede superar los 35 caracteres\"});\r\n    }\r\n\r\n    // Acá usamos un REGEX para validar si es un mail\r\n    else if(!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.username)){\r\n        setErrors({...errors, username:\"Email inválido\"});\r\n    }\r\n\r\n    // Esto es por si no hay ningún error, también tiene que mostrar algo (o no mostrar nada, en este caso)\r\n    else {\r\n        setErrors({...errors, username:\"\"});\r\n    }\r\n\r\n    //! validacion password\r\n\r\n    if(userData.password.length < 6 || userData.password.length > 10 ){\r\n        setErrors({...errors, password:\"Longitud inválida\"});\r\n    } else if (!/\\d/.test(userData.password)) {\r\n        setErrors({...errors, password:\"Debe contener al menos un número\"});\r\n    } else {\r\n        setErrors({...errors, password:\"\"});\r\n    }\r\n\r\n};\r\n\r\nexport default validation;"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAM;EACjD;;EAEA,IAAI,CAACF,QAAQ,CAACG,QAAQ,EAAE;IACpBD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,QAAQ,EAAC;IAA+B,CAAC,CAAC;EACpE,CAAC,MAEI,IAAGH,QAAQ,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IACnCF,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,QAAQ,EAAC;IAAoC,CAAC,CAAC;EACzE;;EAEA;EAAA,KACK,IAAG,CAAC,+CAA+C,CAACE,IAAI,CAACL,QAAQ,CAACG,QAAQ,CAAC,EAAC;IAC7ED,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,QAAQ,EAAC;IAAgB,CAAC,CAAC;EACrD;;EAEA;EAAA,KACK;IACDD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,QAAQ,EAAC;IAAE,CAAC,CAAC;EACvC;;EAEA;;EAEA,IAAGH,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAE;IAC9DF,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEK,QAAQ,EAAC;IAAmB,CAAC,CAAC;EACxD,CAAC,MAAM,IAAI,CAAC,IAAI,CAACD,IAAI,CAACL,QAAQ,CAACM,QAAQ,CAAC,EAAE;IACtCJ,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEK,QAAQ,EAAC;IAAkC,CAAC,CAAC;EACvE,CAAC,MAAM;IACHJ,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEK,QAAQ,EAAC;IAAE,CAAC,CAAC;EACvC;AAEJ,CAAC;AAED,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}