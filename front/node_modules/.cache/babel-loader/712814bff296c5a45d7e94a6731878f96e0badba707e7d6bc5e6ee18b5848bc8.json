{"ast":null,"code":"import { ADD_FAVORITE, REMOVE_FAVORITE, GET_CHARACTER_DETAIL, GET_FAVORITES, CLEAN_DETAIL, FILTER, ORDER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  characterDetail: {},\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAVORITE:\n      //Recordemos que el reducer pisa con un array nuevo con una copia de lo que ya tenía y un elemento nuevo, por ejemplo. El reducer no modifica el estado global haciendo esto\n\n      //LE \"agregamos\" el payload a la variable global\n      return {\n        ...state,\n        myFavorites: [...state.allCharacters, action.payload],\n        allCharacters: [...state.allCharacters, action.payload]\n      };\n\n    //Busca con un filter y \"remueve\" el especificado a partir de su id\n    case REMOVE_FAVORITE:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(char => char.id !== action.payload)\n      };\n    case GET_CHARACTER_DETAIL:\n      return {\n        ...state,\n        characterDetail: action.payload\n      };\n    case FILTER:\n      const allCharacters = [...state.allCharacters];\n      const filter = allCharacters.filter(character => character.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: filter\n      };\n    case ORDER:\n      const allCharacters2 = [...state.allCharacters];\n      let sort;\n      if (action.payload == \"Ascendente\") {\n        sort = allCharacters2.sort((a, b) => a.id - b.id);\n      } else {\n        sort = allCharacters2.sort((a, b) => b.id - a.id);\n      }\n      return {\n        ...state,\n        myFavorites: sort\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        characterDetail: {}\n      };\n    case GET_FAVORITES:\n      return {\n        ...state,\n        myFavorites: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAVORITE","REMOVE_FAVORITE","GET_CHARACTER_DETAIL","GET_FAVORITES","CLEAN_DETAIL","FILTER","ORDER","initialState","myFavorites","characterDetail","allCharacters","rootReducer","state","arguments","length","undefined","action","type","payload","filter","char","id","character","gender","allCharacters2","sort","a","b"],"sources":["D:/Nati/Henry/INTEGRADOR/rickandmorty/front/src/redux/reducer.js"],"sourcesContent":["import {\r\n  ADD_FAVORITE,\r\n  REMOVE_FAVORITE,\r\n  GET_CHARACTER_DETAIL,\r\n  GET_FAVORITES,\r\n  CLEAN_DETAIL,\r\n  FILTER,\r\n  ORDER,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  characterDetail: {},\r\n  allCharacters: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_FAVORITE:\r\n      //Recordemos que el reducer pisa con un array nuevo con una copia de lo que ya tenía y un elemento nuevo, por ejemplo. El reducer no modifica el estado global haciendo esto\r\n\r\n      //LE \"agregamos\" el payload a la variable global\r\n      return {\r\n        ...state,\r\n        myFavorites: [...state.allCharacters, action.payload],\r\n        allCharacters: [...state.allCharacters, action.payload],\r\n      };\r\n\r\n    //Busca con un filter y \"remueve\" el especificado a partir de su id\r\n    case REMOVE_FAVORITE:\r\n      return {\r\n        ...state,\r\n        myFavorites: state.myFavorites.filter(\r\n          (char) => char.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case GET_CHARACTER_DETAIL:\r\n      return {\r\n        ...state,\r\n        characterDetail: action.payload,\r\n      };\r\n\r\n    case FILTER:\r\n      const allCharacters = [...state.allCharacters];\r\n      const filter = allCharacters.filter(\r\n        (character) => character.gender === action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        myFavorites: filter,\r\n      };\r\n\r\n    case ORDER:\r\n      const allCharacters2 = [...state.allCharacters];\r\n      let sort;\r\n      if (action.payload == \"Ascendente\") {\r\n        sort = allCharacters2.sort((a, b) => a.id - b.id);\r\n      } else {\r\n        sort = allCharacters2.sort((a, b) => b.id - a.id);\r\n      }\r\n      return {\r\n        ...state,\r\n        myFavorites: sort,\r\n      };\r\n\r\n    case CLEAN_DETAIL:\r\n      return {\r\n        ...state,\r\n        characterDetail: {},\r\n      };\r\n\r\n    case GET_FAVORITES:\r\n      return {\r\n        ...state,\r\n        myFavorites: action.payload,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,eAAe,EACfC,oBAAoB,EACpBC,aAAa,EACbC,YAAY,EACZC,MAAM,EACNC,KAAK,QACA,WAAW;AAElB,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,eAAe,EAAE,CAAC,CAAC;EACnBC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKjB,YAAY;MACf;;MAEA;MACA,OAAO;QACL,GAAGY,KAAK;QACRJ,WAAW,EAAE,CAAC,GAAGI,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACE,OAAO,CAAC;QACrDR,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACE,OAAO;MACxD,CAAC;;IAEH;IACA,KAAKjB,eAAe;MAClB,OAAO;QACL,GAAGW,KAAK;QACRJ,WAAW,EAAEI,KAAK,CAACJ,WAAW,CAACW,MAAM,CAClCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAExC,CAAC;IAEH,KAAKhB,oBAAoB;MACvB,OAAO;QACL,GAAGU,KAAK;QACRH,eAAe,EAAEO,MAAM,CAACE;MAC1B,CAAC;IAEH,KAAKb,MAAM;MACT,MAAMK,aAAa,GAAG,CAAC,GAAGE,KAAK,CAACF,aAAa,CAAC;MAC9C,MAAMS,MAAM,GAAGT,aAAa,CAACS,MAAM,CAChCG,SAAS,IAAKA,SAAS,CAACC,MAAM,KAAKP,MAAM,CAACE,OAAO,CACnD;MACD,OAAO;QACL,GAAGN,KAAK;QACRJ,WAAW,EAAEW;MACf,CAAC;IAEH,KAAKb,KAAK;MACR,MAAMkB,cAAc,GAAG,CAAC,GAAGZ,KAAK,CAACF,aAAa,CAAC;MAC/C,IAAIe,IAAI;MACR,IAAIT,MAAM,CAACE,OAAO,IAAI,YAAY,EAAE;QAClCO,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACL,EAAE,GAAGM,CAAC,CAACN,EAAE,CAAC;MACnD,CAAC,MAAM;QACLI,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACN,EAAE,GAAGK,CAAC,CAACL,EAAE,CAAC;MACnD;MACA,OAAO;QACL,GAAGT,KAAK;QACRJ,WAAW,EAAEiB;MACf,CAAC;IAEH,KAAKrB,YAAY;MACf,OAAO;QACL,GAAGQ,KAAK;QACRH,eAAe,EAAE,CAAC;MACpB,CAAC;IAEH,KAAKN,aAAa;MAChB,OAAO;QACL,GAAGS,KAAK;QACRJ,WAAW,EAAEQ,MAAM,CAACE;MACtB,CAAC;IAEH;MACE,OAAO;QACL,GAAGN;MACL,CAAC;EAAC;AAER,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}