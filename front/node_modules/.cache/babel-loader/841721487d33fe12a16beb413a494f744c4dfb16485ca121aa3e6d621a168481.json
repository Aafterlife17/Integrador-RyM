{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\OneDrive\\\\Escritorio\\\\Nati\\\\HENRY\\\\INTEGRADOR\\\\rickandmorty\\\\front\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport style from \"./SearchBar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(_ref) {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  //Acá lo que hacemos es guardar el ID del personaje ingresado en el input en un estado, para que cada vez que hacemos click y se ejecute la función onSearch, este personaje se AGREGUE a este estado. Por eso también le agregamos un onChange al input para que esté atento a los cambios.\n\n  //! ******** USE STATE ID ********\n  const [id, setId] = useState(\"\");\n\n  //! ******** HANDLE CHANGE ********\n  const handleChange = event => {\n    setId(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: style.navBar,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.buttonSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.input,\n        type: \"search\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.button,\n        onClick: () => onSearch(id),\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBar, \"4S2lHYDXZu1kPqeM+OaM1T6vczM=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","style","jsxDEV","_jsxDEV","SearchBar","_ref","_s","onSearch","id","setId","handleChange","event","target","value","className","navBar","children","buttonSearch","input","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/natal/OneDrive/Escritorio/Nati/HENRY/INTEGRADOR/rickandmorty/front/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport style from \"./SearchBar.module.css\";\n\n\nexport default function SearchBar({onSearch}) {\n\n    //Acá lo que hacemos es guardar el ID del personaje ingresado en el input en un estado, para que cada vez que hacemos click y se ejecute la función onSearch, este personaje se AGREGUE a este estado. Por eso también le agregamos un onChange al input para que esté atento a los cambios.\n\n    //! ******** USE STATE ID ********\n    const [id, setId] = useState(\"\");\n    \n    //! ******** HANDLE CHANGE ********\n    const handleChange = (event) => {\n        setId(event.target.value);\n      };\n\n    return(\n        <nav className={style.navBar}>\n            <div className={style.buttonSearch}>\n                <input className={style.input} type=\"search\" onChange={handleChange}/>\n                <button className={style.button} onClick={()=> onSearch(id)}>Agregar</button>\n\n            </div>\n        </nav>\n    );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAExC;;EAEA;EACA,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEhC;EACA,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC5BF,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAEH,oBACIV,OAAA;IAAKW,SAAS,EAAEb,KAAK,CAACc,MAAO;IAAAC,QAAA,eACzBb,OAAA;MAAKW,SAAS,EAAEb,KAAK,CAACgB,YAAa;MAAAD,QAAA,gBAC/Bb,OAAA;QAAOW,SAAS,EAAEb,KAAK,CAACiB,KAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAEV;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACtErB,OAAA;QAAQW,SAAS,EAAEb,KAAK,CAACwB,MAAO;QAACC,OAAO,EAAEA,CAAA,KAAKnB,QAAQ,CAACC,EAAE,CAAE;QAAAQ,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAE3E;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAAClB,EAAA,CArBuBF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}