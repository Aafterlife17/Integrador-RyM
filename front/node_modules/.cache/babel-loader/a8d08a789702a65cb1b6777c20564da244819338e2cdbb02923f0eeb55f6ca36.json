{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nati\\\\Henry\\\\INTEGRADOR\\\\rickandmorty\\\\front\\\\src\\\\components\\\\Detail\\\\Detail.jsx\";\nimport useCharacter from \"../../hooks/useCharacter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  var _s = $RefreshSig$(),\n    _character$origin;\n  const character = useCharacter = _s(() => {\n    _s();\n    const dispatch = useDispatch();\n    const character = useSelector(state => state.characterDetail);\n    const {\n      detailId\n    } = useParams();\n    useEffect(() => {\n      dispatch(getCharacterDetail(detailId));\n      return () => {\n        dispatch(cleanDetail());\n      };\n    }, [detailId]);\n    return character;\n  }, \"Cfien6b8CDqdIaeXGuo+l13IDwg=\", true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: character.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.species\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useCharacter","jsxDEV","_jsxDEV","Fragment","_Fragment","Detail","_s","$RefreshSig$","_character$origin","character","dispatch","useDispatch","useSelector","state","characterDetail","detailId","useParams","useEffect","getCharacterDetail","cleanDetail","children","name","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","src","image","alt","_c","$RefreshReg$"],"sources":["D:/Nati/Henry/INTEGRADOR/rickandmorty/front/src/components/Detail/Detail.jsx"],"sourcesContent":["import useCharacter from \"../../hooks/useCharacter\";\r\n\r\nconst Detail = () => {\r\n\r\n    const character = useCharacter = () => {\r\n  const dispatch = useDispatch();\r\n  const character = useSelector((state) => state.characterDetail);\r\n  const { detailId } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacterDetail(detailId));\r\n\r\n    return () => {\r\n      dispatch(cleanDetail());\r\n    };\r\n  }, [detailId]);\r\n\r\n  return character;\r\n};\r\n\r\n    return(\r\n        <div>\r\n\r\n            {/* Acá le vamos a decir lo siguiente. character.name existe? si existe, mostrame esto (y ahí la info) Si no existe, mostrame loading */}\r\n            {\r\n                character.name ?\r\n                (<>\r\n                    <h2>{character.name}</h2>\r\n                    <p>{character.status}</p>\r\n                    <p>{character.species}</p>\r\n                    <p>{character.gender}</p>\r\n                    {/* Acá le decimos que espere hasta que la info de origin esté disponible, porque a veces axios tarda mucho */}\r\n                    <p>{character.origin?.name}</p>\r\n                    <img src={character.image} alt=\"img\" />\r\n                </>\r\n                ) : ( \r\n                <h3>Loading...</h3>\r\n            )}\r\n        \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detail;"],"mappings":";AAAA,OAAOA,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,iBAAA;EAEjB,MAAMC,SAAS,GAAGT,YAAY,GAAAM,EAAA,CAAG,MAAM;IAAAA,EAAA;IACzC,MAAMI,QAAQ,GAAGC,WAAW,EAAE;IAC9B,MAAMF,SAAS,GAAGG,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACC,eAAe,CAAC;IAC/D,MAAM;MAAEC;IAAS,CAAC,GAAGC,SAAS,EAAE;IAEhCC,SAAS,CAAC,MAAM;MACdP,QAAQ,CAACQ,kBAAkB,CAACH,QAAQ,CAAC,CAAC;MAEtC,OAAO,MAAM;QACXL,QAAQ,CAACS,WAAW,EAAE,CAAC;MACzB,CAAC;IACH,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;IAEd,OAAON,SAAS;EAClB,CAAC;EAEG,oBACIP,OAAA;IAAAkB,QAAA,EAIQX,SAAS,CAACY,IAAI,gBACbnB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACGlB,OAAA;QAAAkB,QAAA,EAAKX,SAAS,CAACY;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzBvB,OAAA;QAAAkB,QAAA,EAAIX,SAAS,CAACiB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzBvB,OAAA;QAAAkB,QAAA,EAAIX,SAAS,CAACkB;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC1BvB,OAAA;QAAAkB,QAAA,EAAIX,SAAS,CAACmB;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAEzBvB,OAAA;QAAAkB,QAAA,GAAAZ,iBAAA,GAAIC,SAAS,CAACoB,MAAM,cAAArB,iBAAA,uBAAhBA,iBAAA,CAAkBa;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC/BvB,OAAA;QAAK4B,GAAG,EAAErB,SAAS,CAACsB,KAAM;QAACC,GAAG,EAAC;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA,gBACxC,gBAEHvB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGC;AAEd,CAAC;AAACQ,EAAA,GAxCI5B,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}