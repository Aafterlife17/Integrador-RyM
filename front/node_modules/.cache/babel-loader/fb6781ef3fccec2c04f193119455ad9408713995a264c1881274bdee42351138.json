{"ast":null,"code":"import { ADD_FAVORITE, REMOVE_FAVORITE, GET_CHARACTER_DETAIL, GET_FAVORITES, CLEAN_DETAIL, FILTER, ORDER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAVORITE:\n      //Recordemos que el reducer pisa con un array nuevo con una copia de lo que ya tenía y un elemento nuevo, por ejemplo. El reducer no modifica el estado global haciendo esto\n\n      //LE \"agregamos\" el payload a la variable global\n      return {\n        ...state,\n        myFavorites: [...state.allCharacters, action.payload],\n        allCharacters: [...state.allCharacters, action.payload]\n      };\n\n    //Busca con un filter y \"remueve\" el especificado a partir de su id\n    case REMOVE_FAVORITE:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(char => char.id !== action.payload)\n      };\n    case GET_CHARACTER_DETAIL:\n      return {\n        ...state,\n        characterDetail: action.payload\n      };\n    case FILTER:\n      const allCharacters = [...state.allCharacters];\n      const filter = allCharacters.filter(character => character.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: filter\n      };\n    case ORDER:\n      const allCharacters2 = [...state.allCharacters];\n      let sort;\n      if (action.payload == \"Ascendente\") {\n        sort = allCharacters2.sort((a, b) => a.id - b.id);\n      } else {\n        sort = allCharacters2.sort((a, b) => b.id - a.id);\n      }\n      return {\n        ...state,\n        myFavorites: sort\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        characterDetail: {}\n      };\n    case GET_FAVORITES:\n      return {\n        ...state,\n        myFavorites: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAVORITE","REMOVE_FAVORITE","GET_CHARACTER_DETAIL","GET_FAVORITES","CLEAN_DETAIL","FILTER","ORDER","initialState","myFavorites","allCharacters","rootReducer","state","arguments","length","undefined","action","type","payload","filter","char","id","characterDetail","character","gender","allCharacters2","sort","a","b"],"sources":["D:/Nati/Henry/INTEGRADOR/rickandmorty/front/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAVORITE, REMOVE_FAVORITE, GET_CHARACTER_DETAIL, GET_FAVORITES, CLEAN_DETAIL, FILTER, ORDER } from \"./actions\";\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters: []\r\n};\r\n\r\nconst rootReducer = (state = initialState ,action) => {\r\n    switch(action.type){\r\n\r\n        case ADD_FAVORITE:\r\n            //Recordemos que el reducer pisa con un array nuevo con una copia de lo que ya tenía y un elemento nuevo, por ejemplo. El reducer no modifica el estado global haciendo esto\r\n            \r\n            //LE \"agregamos\" el payload a la variable global\r\n            return {\r\n                ...state, \r\n                myFavorites:[...state.allCharacters, action.payload],\r\n                allCharacters:[...state.allCharacters, action.payload]\r\n            };\r\n\r\n\r\n            //Busca con un filter y \"remueve\" el especificado a partir de su id\r\n        case REMOVE_FAVORITE:\r\n            return {\r\n                ...state, \r\n                myFavorites: state.myFavorites.filter(char=>char.id !== action.payload),\r\n            };\r\n\r\n        case GET_CHARACTER_DETAIL:\r\n            return {\r\n                ...state,\r\n                characterDetail: action.payload,\r\n            };\r\n\r\n        case FILTER:\r\n            const allCharacters = [...state.allCharacters];\r\n            const filter = allCharacters.filter(character => character.gender === action.payload)\r\n            return {\r\n                ...state,\r\n                myFavorites: filter\r\n            };\r\n\r\n        case ORDER:\r\n            const allCharacters2 = [...state.allCharacters];\r\n            let sort;\r\n            if(action.payload == \"Ascendente\"){\r\n                sort = allCharacters2.sort((a,b) => a.id - b.id);\r\n            } else {\r\n                sort = allCharacters2.sort((a,b) => b.id - a.id);\r\n            }\r\n            return {\r\n                ...state,\r\n                myFavorites: sort\r\n            }\r\n          \r\n        case CLEAN_DETAIL:\r\n            return {\r\n                ...state,\r\n                characterDetail: {},\r\n            };        \r\n            \r\n        case GET_FAVORITES:\r\n            return {\r\n                 ...state, \r\n                 myFavorites: action.payload \r\n                };\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n};\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,eAAe,EAAEC,oBAAoB,EAAEC,aAAa,EAAEC,YAAY,EAAEC,MAAM,EAAEC,KAAK,QAAQ,WAAW;AAE3H,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAOC,MAAM,CAACC,IAAI;IAEd,KAAKhB,YAAY;MACb;;MAEA;MACA,OAAO;QACH,GAAGW,KAAK;QACRH,WAAW,EAAC,CAAC,GAAGG,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACE,OAAO,CAAC;QACpDR,aAAa,EAAC,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACE,OAAO;MACzD,CAAC;;IAGD;IACJ,KAAKhB,eAAe;MAChB,OAAO;QACH,GAAGU,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACU,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAC1E,CAAC;IAEL,KAAKf,oBAAoB;MACrB,OAAO;QACH,GAAGS,KAAK;QACRU,eAAe,EAAEN,MAAM,CAACE;MAC5B,CAAC;IAEL,KAAKZ,MAAM;MACP,MAAMI,aAAa,GAAG,CAAC,GAAGE,KAAK,CAACF,aAAa,CAAC;MAC9C,MAAMS,MAAM,GAAGT,aAAa,CAACS,MAAM,CAACI,SAAS,IAAIA,SAAS,CAACC,MAAM,KAAKR,MAAM,CAACE,OAAO,CAAC;MACrF,OAAO;QACH,GAAGN,KAAK;QACRH,WAAW,EAAEU;MACjB,CAAC;IAEL,KAAKZ,KAAK;MACN,MAAMkB,cAAc,GAAG,CAAC,GAAGb,KAAK,CAACF,aAAa,CAAC;MAC/C,IAAIgB,IAAI;MACR,IAAGV,MAAM,CAACE,OAAO,IAAI,YAAY,EAAC;QAC9BQ,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,CAAC;MACpD,CAAC,MAAM;QACHK,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACP,EAAE,GAAGM,CAAC,CAACN,EAAE,CAAC;MACpD;MACA,OAAO;QACH,GAAGT,KAAK;QACRH,WAAW,EAAEiB;MACjB,CAAC;IAEL,KAAKrB,YAAY;MACb,OAAO;QACH,GAAGO,KAAK;QACRU,eAAe,EAAE,CAAC;MACtB,CAAC;IAEL,KAAKlB,aAAa;MACd,OAAO;QACF,GAAGQ,KAAK;QACRH,WAAW,EAAEO,MAAM,CAACE;MACrB,CAAC;IAET;MACI,OAAO;QACH,GAAGN;MACP,CAAC;EAAC;AAEd,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}